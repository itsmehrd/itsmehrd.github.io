{"version":3,"sources":["./src/app/components/add-client/add-client.component.ts","./src/app/components/add-client/add-client.component.html","./src/app/components/edit-client/edit-client.component.ts","./src/app/components/edit-client/edit-client.component.html","./src/app/components/settings/settings.component.ts","./src/app/components/settings/settings.component.html","./src/app/components/client-details/client-details.component.html","./src/app/components/client-details/client-details.component.ts","./src/app/services/settings.service.ts","./src/app/components/clients/clients.component.html","./src/app/components/clients/clients.component.ts","./src/environments/environment.ts","./src/app/services/client.service.ts","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/guards/register.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from 'src/app/models/Client';\nimport { ClientService } from 'src/app/services/client.service';\nimport { SettingsService } from 'src/app/services/settings.service';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.scss'],\n})\nexport class AddClientComponent implements OnInit {\n  client: Client = {\n    firstName: 'Harish',\n    lastName: 'Reddy',\n    email: 'harishreddy@test.com',\n    phone: '+91-9876543210',\n    balance: 0,\n  };\n\n  // firstName = '';\n\n  disableBalanceInputOnAdd!: boolean;\n\n  @ViewChild('addClientForm') form: any;\n\n  constructor(\n    private _flashMessage: FlashMessagesService,\n    private _clientService: ClientService,\n    private _router: Router,\n    private _settingsService: SettingsService\n  ) {}\n\n  ngOnInit(): void {\n    this.disableBalanceInputOnAdd =\n      this._settingsService.getSettings().disableBalanceInputOnAdd!;\n  }\n\n  // onSubmit({ value, valid }: { value: Client; valid: Boolean }) {\n  onSubmit({ value, valid }: NgForm) {\n    // console.log('Form Value Object:: ', value);\n    // console.log('isFormValid:: ', valid);\n\n    if (this.disableBalanceInputOnAdd === false) {\n      value.balance = 0;\n    }\n\n    //If form is valid\n    if (!valid) {\n      //show Error Message (Flash)\n      this._flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger',\n        timeout: 4000,\n      });\n    } else {\n      //Add new Client\n      this._clientService.addNewClient(value);\n      //Show the Message (Flash)\n      this._flashMessage.show('New client added', {\n        cssClass: 'alert-success',\n        timeout: 4000,\n      });\n      //Redirect to the DashBoard\n      this._router.navigate(['/']);\n    }\n  }\n}\n","<div class=\"row my-3\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i>&nbsp;Back to Dashboard\n    </a>\n  </div>\n  <div class=\"col-md-6\"></div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card\">\n      <div class=\"card-header\">Add New Client</div>\n      <div class=\"card-body\">\n        <form (ngSubmit)=\"onSubmit(addClientForm)\" #addClientForm=\"ngForm\">\n          <!-- First Name -->\n          <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n              <label for=\"firstName\">First Name</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"firstName\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    clientFirstName.touched && clientFirstName.errors\n                }\"\n                name=\"firstName\"\n                [(ngModel)]=\"client.firstName\"\n                #clientFirstName=\"ngModel\"\n                minlength=\"2\"\n                required\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n              />\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientFirstName.errors?.required\"\n              >\n                First Name required\n              </small>\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientFirstName.errors?.minlength\"\n              >\n                Must be atleast 2 characters\n              </small>\n            </div>\n\n            <!-- Last Name -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"lastName\">Last Name</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"lastName\"\n                [ngClass]=\"{\n                  'is-invalid': clientLastName.touched && clientLastName.errors\n                }\"\n                name=\"lastName\"\n                [(ngModel)]=\"client.lastName\"\n                #clientLastName=\"ngModel\"\n                minlength=\"2\"\n                required\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n              />\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientLastName.errors?.required\"\n              >\n                Last Name required\n              </small>\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientLastName.errors?.minlength\"\n              >\n                Must be atleast 2 characters\n              </small>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <!-- Email -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"email\">Email</label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                id=\"email\"\n                [ngClass]=\"{\n                  'is-invalid': clientEmail.touched && clientEmail.errors\n                }\"\n                name=\"email\"\n                [(ngModel)]=\"client.email\"\n                #clientEmail=\"ngModel\"\n                pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                required\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n              />\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientEmail.errors?.required\"\n              >\n                Email required\n              </small>\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientEmail.errors?.pattern\"\n              >\n                Invalid Email\n              </small>\n            </div>\n\n            <!-- Phone -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"phone\">Phone</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"phone\"\n                [ngClass]=\"{\n                  'is-invalid': clientPhone.touched && clientPhone.errors\n                }\"\n                name=\"phone\"\n                [(ngModel)]=\"client.phone\"\n                #clientPhone=\"ngModel\"\n                minlength=\"10\"\n                required\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n              />\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientPhone.errors?.required\"\n              >\n                Phone number required\n              </small>\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientPhone.errors?.minlength\"\n              >\n                Must be atleast 10 characters\n              </small>\n            </div>\n          </div>\n          <div class=\"row\">\n            <!-- Balance -->\n            <div class=\"form-group col\">\n              <label for=\"balance\">Balance</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"balance\"\n                [ngClass]=\"{\n                  'is-invalid': clientBalance.touched && clientBalance.errors\n                }\"\n                name=\"balance\"\n                [(ngModel)]=\"client.balance\"\n                #clientBalance=\"ngModel\"\n                [disabled]=\"disableBalanceInputOnAdd\"\n                placeholder=\"\"\n              />\n            </div>\n          </div>\n\n          <!-- Submit Button -->\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            class=\"mt-4 btn btn-primary btn-block\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from 'src/app/models/Client';\nimport { ClientService } from 'src/app/services/client.service';\nimport { SettingsService } from 'src/app/services/settings.service';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.scss'],\n})\nexport class EditClientComponent implements OnInit {\n  idFromURL: string = '';\n  fetchedClient: Client = {};\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0,\n  };\n\n  disableBalanceInputOnEdit!: boolean;\n\n  constructor(\n    private _clientService: ClientService,\n    private _flashMessage: FlashMessagesService,\n    private _router: Router,\n    private _route: ActivatedRoute,\n    private _settingsService: SettingsService\n  ) {}\n\n  ngOnInit(): void {\n    //Disable Balance input on Edit\n    this.disableBalanceInputOnEdit =\n      this._settingsService.getSettings().disableBalanceInputOnEdit!;\n\n    //Get id from the URL\n    this.idFromURL = this._route.snapshot.params['id'];\n    //Get corresponding client\n    this._clientService\n      .fetchClientWithID(this.idFromURL)\n      .subscribe((correspondingFireBaseClient: Client) => {\n        this.fetchedClient = correspondingFireBaseClient;\n      });\n  }\n\n  onSubmit({ value, valid }: NgForm) {\n    if (!valid) {\n      this._flashMessage.show('Please fill outh the form correctly', {\n        cssClass: 'alert-danger',\n        timeout: 4000,\n      });\n    } else {\n      //Add Id to Client\n      value.id = this.idFromURL;\n      //Update Client\n      this._clientService.updateClient(value);\n      //Show message\n      this._flashMessage.show('Client updated', {\n        cssClass: 'alert-success',\n        timeout: 4000,\n      });\n      //Go back to details page\n      this._router.navigate([`/client/${this.idFromURL}`]);\n    }\n  }\n}\n","<div class=\"row my-3\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/client/{{ fetchedClient.id }}\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i>&nbsp;Back to Client Details\n    </a>\n  </div>\n  <div class=\"col-md-6\"></div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card\">\n      <div class=\"card-header\">Edit Client</div>\n      <div class=\"card-body\">\n        <form (ngSubmit)=\"onSubmit(editClientForm)\" #editClientForm=\"ngForm\">\n          <!-- First Name -->\n          <div class=\"row\">\n            <div class=\"form-group col-md-6\">\n              <label for=\"firstName\">First Name</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"firstName\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    clientFirstName.touched && clientFirstName.errors\n                }\"\n                name=\"firstName\"\n                [(ngModel)]=\"fetchedClient.firstName\"\n                #clientFirstName=\"ngModel\"\n                minlength=\"2\"\n                required\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n              />\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientFirstName.errors?.required\"\n              >\n                First Name required\n              </small>\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientFirstName.errors?.minlength\"\n              >\n                Must be atleast 2 characters\n              </small>\n            </div>\n\n            <!-- Last Name -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"lastName\">Last Name</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"lastName\"\n                [ngClass]=\"{\n                  'is-invalid': clientLastName.touched && clientLastName.errors\n                }\"\n                name=\"lastName\"\n                [(ngModel)]=\"fetchedClient.lastName\"\n                #clientLastName=\"ngModel\"\n                minlength=\"2\"\n                required\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n              />\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientLastName.errors?.required\"\n              >\n                Last Name required\n              </small>\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientLastName.errors?.minlength\"\n              >\n                Must be atleast 2 characters\n              </small>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <!-- Email -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"email\">Email</label>\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                id=\"email\"\n                [ngClass]=\"{\n                  'is-invalid': clientEmail.touched && clientEmail.errors\n                }\"\n                name=\"email\"\n                [(ngModel)]=\"fetchedClient.email\"\n                #clientEmail=\"ngModel\"\n                pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n                required\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n              />\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientEmail.errors?.required\"\n              >\n                Email required\n              </small>\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientEmail.errors?.pattern\"\n              >\n                Invalid Email\n              </small>\n            </div>\n\n            <!-- Phone -->\n            <div class=\"form-group col-md-6\">\n              <label for=\"phone\">Phone</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"phone\"\n                [ngClass]=\"{\n                  'is-invalid': clientPhone.touched && clientPhone.errors\n                }\"\n                name=\"phone\"\n                [(ngModel)]=\"fetchedClient.phone\"\n                #clientPhone=\"ngModel\"\n                minlength=\"10\"\n                required\n                aria-describedby=\"helpId\"\n                placeholder=\"\"\n              />\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientPhone.errors?.required\"\n              >\n                Phone number required\n              </small>\n              <small\n                id=\"helpId\"\n                class=\"form-text invalid-feedback\"\n                [hidden]=\"!clientPhone.errors?.minlength\"\n              >\n                Must be atleast 10 characters\n              </small>\n            </div>\n          </div>\n          <div class=\"row\">\n            <!-- Balance -->\n            <div class=\"form-group col\">\n              <label for=\"balance\">Balance</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                id=\"balance\"\n                [ngClass]=\"{\n                  'is-invalid': clientBalance.touched && clientBalance.errors\n                }\"\n                name=\"balance\"\n                [(ngModel)]=\"fetchedClient.balance\"\n                #clientBalance=\"ngModel\"\n                [disabled]=\"disableBalanceInputOnEdit\"\n                placeholder=\"\"\n              />\n            </div>\n          </div>\n\n          <!-- Submit Button -->\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            class=\"mt-4 btn btn-primary btn-block\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Settings } from 'src/app/models/Settings';\nimport { SettingsService } from 'src/app/services/settings.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n})\nexport class SettingsComponent implements OnInit {\n  customSettings!: Settings;\n\n  constructor(\n    private _settingsService: SettingsService,\n    private _flashMessage: FlashMessagesService,\n    private _router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.customSettings = this._settingsService.getSettings();\n  }\n\n  onSubmit() {\n    this._settingsService.changeSettings(this.customSettings);\n    this._flashMessage.show('Settings saved', {\n      cssClass: 'alert-success',\n      timeout: 4000,\n    });\n  }\n}\n","<div class=\"row my-3\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i>&nbsp;Back to Dashboard\n    </a>\n  </div>\n  <div class=\"col-md-6\"></div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col\">\n    <div class=\"card\">\n      <div class=\"card-header\">Edit Settings</div>\n      <div class=\"card-body\">\n        <form (submit)=\"onSubmit()\">\n          <!-- Allow Registration -->\n          <div class=\"form-check mt-1\">\n            <label class=\"form-check-label\">\n              <input\n                type=\"checkbox\"\n                class=\"form-check-input\"\n                name=\"allowRegistration\"\n                id=\"allowRegistration\"\n                value=\"checkedValue\"\n                [checked]=\"customSettings.allowRegistration\"\n                (change)=\"\n                  customSettings.allowRegistration = !customSettings.allowRegistration\n                \"\n              />\n              Enable <code class=\"text-primary\">Register</code> link in navigation bar on initial landing page\n            </label>\n          </div>\n\n          <!-- Disable Balance on Add -->\n          <div class=\"form-check mt-1\">\n            <label class=\"form-check-label\">\n              <input\n                type=\"checkbox\"\n                class=\"form-check-input\"\n                name=\"disableBalanceInputOnAdd\"\n                id=\"disableBalanceInputOnAdd\"\n                value=\"checkedValue\"\n                [checked]=\"customSettings.disableBalanceInputOnAdd\"\n                (change)=\"\n                  customSettings.disableBalanceInputOnAdd =\n                    !customSettings.disableBalanceInputOnAdd\n                \"\n              />\n              Disable <code class=\"text-success\">Debt Balance Input</code> on\n              <code class=\"text-success\">ADD</code> Client\n            </label>\n          </div>\n\n          <!-- Disable Balance on Edit -->\n          <div class=\"form-check mt-1\">\n            <label class=\"form-check-label\">\n              <input\n                type=\"checkbox\"\n                class=\"form-check-input\"\n                name=\"disableBalanceInputOnEdit\"\n                id=\"disableBalanceInputOnEdit\"\n                value=\"checkedValue\"\n                [checked]=\"customSettings.disableBalanceInputOnEdit\"\n                (change)=\"\n                  customSettings.disableBalanceInputOnEdit =\n                    !customSettings.disableBalanceInputOnEdit\n                \"\n              />\n              Disable <code>Debt Balance Input</code> on\n              <code>EDIT</code> Client\n            </label>\n          </div>\n\n          <!-- Submit Button -->\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            class=\"mt-4 btn btn-warning btn-block\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"row my-3\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i>&nbsp;Back to Dashboard\n    </a>\n  </div>\n  <div class=\"col-md-6\">\n    <div class=\"btn-group pull-right\">\n      <a routerLink=\"/client/edit/{{ idFromURL }}\" class=\"btn btn-dark\">\n        <i class=\"fa fa-pencil\"></i>&nbsp;Edit\n      </a>\n      <button (click)=\"onDelete()\" class=\"btn btn-danger\">\n        <i class=\"fa fa-trash\">&nbsp;Delete</i>\n      </button>\n    </div>\n  </div>\n</div>\n<hr />\n<div *ngIf=\"fetchedClient\" class=\"card\">\n  <div class=\"card-header\">\n    <h1 class=\"display-4 text-center\">\n      {{ fetchedClient.firstName }} {{ fetchedClient.lastName }}\n    </h1>\n  </div>\n  <div class=\"card-body text-center\">\n    <div class=\"row\">\n      <div class=\"col-lg-6 mt-3 px-5\">\n        <h5>\n          Client ID:\n          <code class=\"text-danger h5\">{{ fetchedClient.id }}</code>\n        </h5>\n\n        <ul class=\"list-group mt-3\">\n          <li class=\"list-group-item\">\n            Contact Email:\n            <code class=\"text-primary h5\">{{ fetchedClient.email }}</code>\n          </li>\n          <li class=\"list-group-item\">\n            Contact Phone:\n            <code class=\"text-success h5\">{{ fetchedClient.phone }}</code>\n          </li>\n        </ul>\n      </div>\n      <div class=\"col-lg-6 mt-3 px-5\">\n        <h3 class=\"\">\n          Balance&nbsp;\n          <a (click)=\"showBalanceUpdateInputForm = !showBalanceUpdateInputForm\">\n            <i class=\"fa fa-pencil-square\"></i>\n          </a>\n          <div class=\"clear-fix mt-3\">\n            <form *ngIf=\"showBalanceUpdateInputForm\" (submit)=\"updateBalance()\">\n              <div class=\"input-group\">\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  id=\"balance\"\n                  name=\"balance\"\n                  [(ngModel)]=\"fetchedClient.balance\"\n                  placeholder=\"\"\n                />\n                <span class=\"input-group-btn\">\n                  <button type=\"submit\" class=\"btn btn-primary\">\n                    Update Balance\n                  </button>\n                </span>\n              </div>\n            </form>\n          </div>\n          <div\n            class=\"display-4 mt-2\"\n            [class.text-danger]=\"\n              fetchedClient.balance! > thresholdTolerance || hasDebtBalance\n            \"\n            [class.text-success]=\"\n              fetchedClient.balance! <= thresholdTolerance || !hasDebtBalance\n            \"\n          >\n            {{ fetchedClient.balance | currency: \"INR\":\"symbol\" }}\n          </div>\n        </h3>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from 'src/app/models/Client';\nimport { ClientService } from 'src/app/services/client.service';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.scss'],\n})\nexport class ClientDetailsComponent implements OnInit {\n  idFromURL: string = '';\n  fetchedClient: Client = {};\n  thresholdTolerance = 0; // The amount of debt that can be tolerated\n  hasDebtBalance: boolean = false;\n  showBalanceUpdateInputForm: boolean = false;\n\n  constructor(\n    private _clientService: ClientService,\n    private _flashMessage: FlashMessagesService,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    //Get id from the URL\n    this.idFromURL = this._route.snapshot.params['id'];\n    //Get corresponding client\n    this._clientService\n      .fetchClientWithID(this.idFromURL)\n      .subscribe((correspondingFireBaseClient: Client) => {\n        if (correspondingFireBaseClient !== null) {\n          if (correspondingFireBaseClient.balance! > this.thresholdTolerance) {\n            this.hasDebtBalance = true;\n          }\n        }\n        this.fetchedClient = correspondingFireBaseClient;\n        // console.log('Fetch Client with ID: ', correspondingFireBaseClient);\n      });\n  }\n\n  onDelete() {\n    if (confirm('Are you sure?')) {\n      this._clientService.deleteClient(this.fetchedClient);\n      this._flashMessage.show('Client removed', {\n        cssClass: 'alert-danger',\n        timeout: 4000,\n      });\n      this._router.navigate(['/']);\n    }\n  }\n\n  updateBalance() {\n    this._clientService.updateClient(this.fetchedClient);\n    this._flashMessage.show('Balance updated', {\n      cssClass: 'alert-success',\n      timeout: 4000,\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Settings } from '../models/Settings';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  settings: Settings = {\n    allowRegistration: true,\n    disableBalanceInputOnAdd: false,\n    disableBalanceInputOnEdit: false,\n  };\n\n  constructor() {\n    if (localStorage.getItem('settings') != null) {\n      this.settings = JSON.parse(localStorage.getItem('settings')!);\n    }\n  }\n\n  getSettings(): Settings {\n    return this.settings;\n  }\n\n  changeSettings(fetechedSettings: Settings): void {\n    localStorage.setItem('settings', JSON.stringify(fetechedSettings));\n  }\n}\n","<div class=\"row my-5\">\n  <div class=\"col-md-6\">\n    <h2><i class=\"fa fa-users\"></i>&nbsp;Clients</h2>\n  </div>\n  <div class=\"col-md-6\">\n    <h5 class=\"text-right text-secondary mb-3\">\n      Total Owed: {{ totalOwed | currency: \"INR\":\"symbol\" }}\n    </h5>\n  </div>\n</div>\n\n<table\n  *ngIf=\"clients?.length! > 0; else noClients\"\n  class=\"table table-dark table-striped table-bordered\"\n>\n  <thead class=\"\">\n    <tr class=\"text-center\">\n      <th>Name</th>\n      <th>Email</th>\n      <th>Debt Balance</th>\n      <th>Details</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let client of clients\" class=\"text-center\">\n      <td>{{ client.firstName }} {{ client.lastName }}</td>\n      <td>{{ client.email }}</td>\n      <td>{{ client.balance | currency: \"INR\":\"symbol\" }}</td>\n      <td>\n        <a routerLink=\"client/{{ client.id }}\" class=\"btn btn-sm btn-secondary\">\n          <i class=\"fa fa-arrow-circle-o-right\"></i>&nbsp;Details\n        </a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-template #noClients>\n  <hr />\n  <h5 class=\"alert alert-info text-center\">\n    <i class=\"fa fa-exclamation-circle\"></i>&nbsp;There are no clients in the\n    system\n  </h5>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Client } from 'src/app/models/Client';\nimport { ClientService } from 'src/app/services/client.service';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss'],\n})\nexport class ClientsComponent implements OnInit {\n  clients: Client[] = [];\n  totalOwed: number = 0;\n\n  constructor(private _clientService: ClientService) {}\n\n  ngOnInit(): void {\n    this._clientService.getClients().subscribe((firebaseClientData) => {\n      // console.log('FireBase: All-Clients::', firebaseClientData);\n      this.clients = firebaseClientData;\n      this.getTotalOwed();\n    });\n  }\n\n  getTotalOwed() {\n    this.totalOwed = this.clients.reduce((total, client) => {\n      // console.log(typeof client.balance, client.balance);\n      return total + (Number(client.balance) || 0);\n    }, 0);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBaRc4vi-rfqemlEF89bMFOXbC6KL2K0O4',\n    authDomain: 'angular-clientpanel-project.firebaseapp.com',\n    projectId: 'angular-clientpanel-project',\n    storageBucket: 'angular-clientpanel-project.appspot.com',\n    messagingSenderId: '30408078846',\n    appId: '1:30408078846:web:f5aa75c0a9bf86fc627caf',\n    measurementId: 'G-23X0SKR4N2',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection,\n  AngularFirestoreDocument,\n} from '@angular/fire/firestore';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Client } from '../models/Client';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientService {\n  client!: Observable<Client | null>;\n  clients!: Observable<Client[]>;\n  clientDoc!: AngularFirestoreDocument<Client>;\n  clientsCollection: AngularFirestoreCollection<Client>;\n\n  constructor(private _afs: AngularFirestore) {\n    this.clientsCollection = this._afs.collection('clients', (ref) =>\n      ref.orderBy('firstName', 'desc')\n    );\n  }\n\n  getClients(): Observable<Client[]> {\n    //Get Clients with id\n    // this.clients = this.clientsCollection.valueChanges(); //if used IDs wont be shown\n    this.clients = this.clientsCollection.snapshotChanges().pipe(\n      map((changes) => {\n        return changes.map((action) => {\n          const individualClientData = action.payload.doc.data() as Client;\n          individualClientData.id = action.payload.doc.id;\n          return individualClientData;\n        });\n      })\n    );\n\n    return this.clients;\n  }\n\n  addNewClient(client: Client) {\n    this.clientsCollection.add(client);\n  }\n\n  fetchClientWithID(id: string): Observable<any> {\n    this.clientDoc = this._afs.doc<Client>(`clients/${id}`);\n    // this.clientDoc = this._afs.doc(`clients/${id}`);\n    this.client = this.clientDoc.snapshotChanges().pipe(\n      map((action) => {\n        if (action.payload.exists === false) {\n          return null;\n        } else {\n          const correspondingClient = action.payload.data() as Client;\n          correspondingClient.id = action.payload.id;\n          return correspondingClient;\n        }\n      })\n    );\n\n    return this.client;\n  }\n\n  updateClient(client: Client) {\n    this.clientDoc = this._afs.doc(`clients/${client.id}`);\n    this.clientDoc.update(client);\n  }\n\n  deleteClient(client: Client) {\n    this.clientDoc = this._afs.doc(`clients/${client.id}`);\n    this.clientDoc.delete();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <div class=\"row\">\r\n  <div class=\"col-md-10\">\r\n    <app-clients></app-clients>\r\n  </div>\r\n  <div class=\"col-md-2\">\r\n    <app-sidebar></app-sidebar>\r\n  </div>\r\n</div> -->\r\n\r\n<app-clients></app-clients>\r\n\r\n<app-sidebar></app-sidebar>\r\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SettingsService } from '../services/settings.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegisterGuard implements CanActivate {\n  constructor(\n    private _settingsService: SettingsService,\n    private _router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this._settingsService.getSettings().allowRegistration) {\n      return true;\n    } else {\n      this._router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'clientPanel';\n}\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n  <flash-messages></flash-messages>\r\n  <router-outlet></router-outlet>\r\n</div>","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _afAuth: AngularFireAuth, private _router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    return this._afAuth.authState.pipe(\n      map((authorization) => {\n        if (!authorization) {\n          this._router.navigate(['/login']);\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n\n//route: ActivatedRouteSnapshot, state: RouterStateSnapshot\n/* | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree */\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  admin = {\n    email: '',\n    password: '',\n  };\n  constructor(\n    private _authService: AuthService,\n    private _flashMessage: FlashMessagesService,\n    private _router: Router\n  ) {}\n\n  ngOnInit(): void {\n    //login page should not appear if authorization exists (already looged in)\n    this._authService.getAuth().subscribe((authorization) => {\n      if (authorization) {\n        this._router.navigate(['/']);\n      }\n    });\n  }\n  onSubmit() {\n    this._authService\n      .login(this.admin.email, this.admin.password)\n      .then((response) => {\n        //Show Flash Message\n        this._flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success',\n          timeout: 4000,\n        });\n        //Route to Dashboard\n        this._router.navigate(['/']);\n      })\n      .catch((error) => {\n        this._flashMessage.show(error.message, {\n          cssClass: 'alert-danger',\n          timeout: 4000,\n        });\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-8 col-lg-6 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h1 class=\"text-center p-3\">\n          <span class=\"text-primary\">\n            <i class=\"fa fa-lock\"></i>&nbsp;Client Panel\n          </span>\n          Login\n        </h1>\n        <form (submit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              name=\"email\"\n              id=\"email\"\n              aria-describedby=\"helpId\"\n              placeholder=\"\"\n              required\n              [(ngModel)]=\"admin.email\"\n            />\n            <!-- <small id=\"helpId\" class=\"form-text\">Help text</small> -->\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              name=\"password\"\n              id=\"password\"\n              aria-describedby=\"helpId\"\n              placeholder=\"\"\n              required\n              [(ngModel)]=\"admin.password\"\n            />\n          </div>\n          <input type=\"submit\" value=\"Login\" class=\"mt-4 btn btn-block btn-primary\">\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n  newAdmin = {\n    email: '',\n    password: '',\n  };\n\n  constructor(\n    private _authService: AuthService,\n    private _flashMessage: FlashMessagesService,\n    private _router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    this._authService\n      .register(this.newAdmin.email, this.newAdmin.password)\n      .then((response) => {\n        this._flashMessage.show('You are now registered and logged in', {\n          cssClass: 'alert-success',\n          timeout: 4000,\n        });\n        this._router.navigate(['/']);\n      })\n      .catch((error) => {\n        this._flashMessage.show(error.message, {\n          cssClass: 'alert-success',\n          timeout: 4000,\n        });\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-8 col-lg-6 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h1 class=\"text-center p-3\">\n          <span class=\"text-secondary\">\n            <i class=\"fa fa-lock\"></i>&nbsp;Client Panel\n          </span>\n          Register\n        </h1>\n        <form (submit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              name=\"email\"\n              id=\"email\"\n              [ngClass]=\"{\n                'is-invalid': newAdminEmail.touched && newAdminEmail.errors\n              }\"\n              aria-describedby=\"helpId\"\n              placeholder=\"\"\n              required\n              [(ngModel)]=\"newAdmin.email\"\n              pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n              #newAdminEmail=\"ngModel\"\n            />\n            <small\n              id=\"helpId\"\n              class=\"form-text invalid-feedback\"\n              [hidden]=\"!newAdminEmail.errors?.required\"\n            >\n              Email required\n            </small>\n            <small\n              id=\"helpId\"\n              class=\"form-text invalid-feedback\"\n              [hidden]=\"!newAdminEmail.errors?.pattern\"\n            >\n              Invalid Email\n            </small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              name=\"password\"\n              id=\"password\"\n              aria-describedby=\"helpId\"\n              placeholder=\"\"\n              required\n              [(ngModel)]=\"newAdmin.password\"\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Register\"\n            class=\"mt-4 btn btn-block btn-dark\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { environment } from 'src/environments/environment';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { FormsModule } from '@angular/forms';\n\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SidebarComponent,\n    DashboardComponent,\n    ClientsComponent,\n    AddClientComponent,\n    EditClientComponent,\n    ClientDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    SettingsComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    FlashMessagesModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebase, 'clientpanel'),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary mb-3\">\n  <div class=\"container\">\n    <a routerLink=\"/\" class=\"navbar-brand\">ClientPanel</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarMain\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n          <a routerLink=\"/\" class=\"nav-link\">Dashboard</a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav ml-auto\">\n        <li *ngIf=\"isRegistrationAllowed && !isLoggedIn\" class=\"nav-item\">\n          <a routerLink=\"/register\" class=\"nav-link\">Register</a>\n        </li>\n        <li *ngIf=\"isRegistrationAllowed && !isLoggedIn\" class=\"nav-item\">\n          <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">{{ loggedInUser }}</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a routerLink=\"/settings\" class=\"nav-link\">Settings</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a href=\"#\" (click)=\"onLogout()\" class=\"nav-link\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SettingsService } from 'src/app/services/settings.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  isRegistrationAllowed!: boolean;\n  isLoggedIn!: boolean;\n  loggedInUser!: string | null;\n\n  constructor(\n    private _authService: AuthService,\n    private _flashMessage: FlashMessagesService,\n    private _router: Router,\n    private _settingsService: SettingsService\n  ) {}\n\n  ngOnInit(): void {\n    //If registration is allowed by admin\n    this.isRegistrationAllowed =\n      this._settingsService.getSettings().allowRegistration!;\n\n    this._authService.getAuth().subscribe((authentication) => {\n      //If authentication exists\n      if (authentication) {\n        this.isLoggedIn = true;\n        this.loggedInUser = authentication.email;\n      } else {\n        this.isLoggedIn = false;\n      }\n    });\n  }\n\n  onLogout() {\n    this._authService.logout();\n    this._flashMessage.show('You are logged out', {\n      cssClass: 'alert-info',\n      timeout: 4000,\n    });\n    this._router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private _afAuth: AngularFireAuth) {}\n\n  login(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      this._afAuth.signInWithEmailAndPassword(email, password).then(\n        (userData) => {\n          resolve(userData);\n        },\n        (error) => {\n          reject(error);\n        }\n      );\n    });\n  }\n\n  //login page should not appear if authorization exists (already looged in)\n  getAuth() {\n    return this._afAuth.authState.pipe(map((auth) => auth));\n  }\n\n  logout() {\n    this._afAuth.signOut();\n  }\n\n  //Register new Admin\n  register(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      this._afAuth.createUserWithEmailAndPassword(email, password).then(\n        (userData) => resolve(userData),\n        (error) => reject(error)\n      );\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegisterGuard } from './guards/register.guard';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    canActivate: [RegisterGuard],\n  },\n  {\n    path: 'client/add',\n    component: AddClientComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'client/edit/:id',\n    component: EditClientComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'client/:id',\n    component: ClientDetailsComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthGuard] },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard, RegisterGuard],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a routerLink=\"/client/add\" class=\"btn btn-danger btn-block\">\n  <i class=\"fa fa-plus\"></i>&nbsp;New Client\n</a>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}