{"version":3,"sources":["./src/app/components/log-form/log-form.component.ts","./src/app/components/log-form/log-form.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/log.service.ts","./src/app/components/logs/logs.component.html","./src/app/components/logs/logs.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Log } from 'src/app/models/Log';\nimport { LogService } from 'src/app/services/log.service';\n\n@Component({\n  selector: 'app-log-form',\n  templateUrl: './log-form.component.html',\n  styleUrls: ['./log-form.component.scss'],\n})\nexport class LogFormComponent implements OnInit {\n  id: string = '';\n  description: string = '';\n  date: any;\n\n  isNewLog: boolean = true;\n\n  constructor(private _logService: LogService) {}\n\n  ngOnInit(): void {\n    this._logService.theSelectedLog.subscribe((selected_log: Log) => {\n      console.log('Pull Selected Log into - LogFormComponent', selected_log);\n      if (selected_log.id) {\n        this.isNewLog = false;\n        this.id = selected_log.id;\n        this.description = selected_log.description;\n        this.date = selected_log.date;\n      }\n    });\n  }\n\n  onSubmit() {\n    //Check if adding new log or updating existing log\n    if (this.isNewLog) {\n      //if adding new log then create a new log with \n      const theNewLog = {\n        //new UUID\n        id: this.generateUUID(),\n        //new Description\n        description: this.description,\n        //new Date\n        date: new Date(),\n      };\n      //and add that to logs list\n      this._logService.addLog(theNewLog);\n    } else {\n      //if updating the existing log then edit the log with\n      const theEditedLog = {\n        //selected log id\n        id: this.id,\n        description: this.description,\n        date: new Date(),\n      };\n      //and update that in logs list\n      this._logService.updateLog(theEditedLog);\n    }\n\n    //ClearState\n    this.clearLogForm();\n  }\n\n  clearLogForm() {\n    this.isNewLog = true;\n    this.id = '';\n    this.description = '';\n    this.date = null;\n    this._logService.resetForm();\n  }\n\n\n  generateUUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n      /[xy]/g,\n      function (c) {\n        var r = (Math.random() * 16) | 0,\n          v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      }\n    );\n  }\n}\n","<div class=\"card mb-3\">\n  <div class=\"card-body\">\n    <form (ngSubmit)=\"onSubmit()\">\n      <div class=\"form-group\">\n        <input\n          type=\"text\"\n          name=\"description\"\n          [(ngModel)]=\"description\"\n          id=\"log-description\"\n          class=\"form-control\"\n          placeholder=\"Add a Log..\"\n          aria-describedby=\"helpId\"\n        />\n        <!-- <small id=\"helpId\" class=\"text-muted\">Help text</small> -->\n      </div>\n      <input\n        type=\"submit\"\n        value=\"Add Log\"\n        class=\"btn btn-block btn-dark\"\n        [disabled]=\"!this.description\"\n      />\n      <button\n        (click)=\"clearLogForm()\"\n        class=\"btn btn-block btn-warning\"\n        type=\"button\"\n        [hidden]=\"!this.description\"\n      >\n        Clear\n      </button>\n    </form>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'devlogger';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <app-log-form></app-log-form>\n  <app-logs></app-logs>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LogFormComponent } from './components/log-form/log-form.component';\nimport { LogsComponent } from './components/logs/logs.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LogFormComponent,\n    LogsComponent,\n  ],\n  imports: [BrowserModule, FormsModule, AppRoutingModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-dark bg-dark mb-3\">\n    <div class=\"container\">\n        <a href=\"/\" class=\"navbar-brand\">DevLogger</a>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { Log } from '../models/Log';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  logs: Log[];\n\n  constructor() {\n    // this.logs = [\n    //   {\n    //     id: '1',\n    //     description: 'Generated Components',\n    //     date: new Date('20 April 2021 09:16:58'),\n    //   },\n    //   {\n    //     id: '2',\n    //     description: 'Added Bootstrap & UI',\n    //     date: new Date('20 April 2021 09:34:18'),\n    //   },\n    //   {\n    //     id: '3',\n    //     description: 'Added Logs Component',\n    //     date: new Date('21 April 2021 10:16:58'),\n    //   },\n    // ];\n\n    this.logs = [];\n  }\n\n  getLogs(): Observable<Log[]> {\n    //Get Logs from Local storage\n    if (localStorage.getItem('Logs') === null) {\n      this.logs = [];\n    } else {\n      this.logs = JSON.parse(localStorage.getItem('Logs')!);\n    }\n    //return them in the ascending order of date created;\n    return of(\n      this.logs.sort((a, b) => {\n        return b.date - a.date;\n      })\n    );\n  }\n\n  // //Method1: Returning logData as an array\n  // getLogs(): Log[] {\n  //   return this.logs;\n  // }\n\n  //{\n  private _logSelection = new BehaviorSubject<Log>({\n    id: '',\n    description: '',\n    date: null,\n  });\n  theSelectedLog = this._logSelection.asObservable();\n  setFormWith(selected_log: Log) {\n    this._logSelection.next(selected_log);\n  }\n  //}\n\n  addLog(new_log: Log) {\n    console.log('Adding Log: ', new_log);\n    this.logs.unshift(new_log);\n\n    //Add Log to LocalStorage\n    localStorage.setItem('Logs', JSON.stringify(this.logs));\n  }\n\n  updateLog(edited_log: Log) {\n    console.log('Edited Log: ', edited_log);\n\n    this.deleteLog(edited_log);\n    this.logs.unshift(edited_log);\n    //Update Logs in Local storage\n    localStorage.setItem('Logs', JSON.stringify(this.logs));\n  }\n\n  deleteLog(selected_log: Log) {\n    this.logs.forEach((current_log, index) => {\n      if (selected_log.id === current_log.id) {\n        this.logs.splice(index, 1);\n      }\n    });\n\n    //Delete Log from Local storage\n    localStorage.setItem('Logs', JSON.stringify(this.logs));\n  }\n\n  // {\n  private _clearSelection = new BehaviorSubject<boolean>(true);\n  stateClear = this._clearSelection.asObservable();\n  resetForm() {\n    this._clearSelection.next(true);\n  }\n  // }\n}\n","<ul class=\"list-group\" *ngIf=\"areLogsLoaded && logs.length > 0\">\n  <li\n    *ngFor=\"let log of logs\"\n    class=\"list-group-item\"\n    [class.list-group-item-warning]=\"log == theClickedLog\"\n  >\n    <div class=\"row align-items-center justify-content-between\">\n      <div class=\"col\">\n        <a href=\"#\" (click)=\"onLogSelection(log)\">\n          {{ log.description }}\n        </a>\n      </div>\n      <div class=\"col text-center\">\n        <span class=\"badge alert-info p-2 ml-0\">\n          {{ log.date | date: \"medium\" }}\n        </span>\n      </div>\n      <div class=\"col-1 text-danger px-2\">\n        <i class=\"fa fa-trash\" (click)=\"onDeletion(log)\"></i>\n      </div>\n    </div>\n  </li>\n</ul>\n\n<div\n  class=\"alert alert-info text-center\"\n  *ngIf=\"areLogsLoaded && logs.length == 0\"\n  role=\"alert\"\n>\n  <strong>\n    <i class=\"fa fa-exclamation-circle\"></i>&nbsp;\n    There are no logs in the DataBase\n  </strong>\n</div>\n\n<div class=\"progress\" *ngIf=\"!areLogsLoaded\">\n  <div\n    class=\"progress-bar bg-primary\"\n    role=\"progressbar\"\n    style=\"width: 25%\"\n    aria-valuenow=\"25\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    Loading...\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Log } from '../../models/Log';\nimport { LogService } from '../../services/log.service';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.scss'],\n})\nexport class LogsComponent implements OnInit {\n  logs!: Log[];\n  theClickedLog!: Log;\n  areLogsLoaded: boolean = false;\n  constructor(private _logService: LogService) {}\n\n  ngOnInit(): void {\n    this._logService.getLogs().subscribe((logData: Log[]) => {\n      console.log('List of Logs: ', logData);\n      this.logs = logData;\n      this.areLogsLoaded = true;\n    });\n\n    // //Method1: Grab the logs released by the _logService as an array\n    // this.logs = this._logService.getLogs();\n    // console.log(this.logs);\n  }\n\n  onLogSelection(selected_log: Log) {\n    console.log('LogsComponent - Selected LOG: ', selected_log);\n    this._logService.setFormWith(selected_log);\n    this.theClickedLog = selected_log;\n  }\n\n  onDeletion(selected_log: Log) {\n    if (confirm('Are you sure wanna delete this log?')) {\n      this._logService.deleteLog(selected_log);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}